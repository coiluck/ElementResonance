#modal-game-middle {
  display: none;
  height: 100%;
}
.middle-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 80%;
  padding: 10px;
  margin: 0 auto;
  border-bottom: 1px solid #f7ecd2;
}
#middle-close-button {
  color:  #e8d9b6;
  font-size: .9rem;
  font-family: serif;
  background: transparent;
  border: none;
  cursor: pointer;
}
.middle-round-display {
  color:  #e8d9b6;
  font-size: 1.2rem;
  font-family: serif;
}
.middle-round-number {
  color: #e8d9b6;
}

.middle-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 80%;
  padding: 10px;
  margin: 0 auto;
  /* 子要素のabsolute配置の基準にするため */
  position: relative; 
  height: calc(100% - 20px - 1.2rem); 
}

.middle-game-start-container {
  position: absolute;
  bottom: 55%; 
  left: 50%;
  transform: translate(-50%, 50%);
  z-index: 10;
}
#middle-game-start-button {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  z-index: 2;
  width: 300px;
  height: 90px;
  margin: 0 auto;
  padding: 10px 20px;
  color: #FFFFFF;
  font-family: 'Garamond', serif; 
  font-size: 2.8rem;
  font-weight: bold;
  letter-spacing: 0.5rem;
  text-align: center;
  text-shadow: 0px 0px 15px rgba(255, 223, 158, 0.7), 0px 2px 3px rgba(0, 0, 0, 0.5);
  background: linear-gradient(145deg, #a83232, #6a1a1a); 
  border: 2px solid #D4AF37; 
  border-radius: 10px;
  box-shadow: 
    inset 0 0 10px rgba(255, 255, 255, 0.2),
    0 5px 15px rgba(0, 0, 0, 0.5);
  cursor: pointer;
  transition: all 0.3s ease-in-out;
}
#middle-game-start-button:hover {
  transform: translateY(-2px) scale(1.05);
  background: linear-gradient(145deg, #c73e3e, #8b2424);
  border: 2px solid #F4D03F;
  box-shadow: 
    inset 0 0 15px rgba(255, 255, 255, 0.3),
    0 8px 25px rgba(0, 0, 0, 0.6),
    0 0 30px rgba(212, 175, 55, 0.4);
  text-shadow: 
    0px 0px 20px rgba(255, 223, 158, 0.9), 
    0px 2px 4px rgba(0, 0, 0, 0.7),
    0px 0px 8px rgba(244, 208, 63, 0.5);
  color: #FFFEF7;
}

.middle-button-container {
  position: absolute;
  bottom: 80px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: space-between;
  gap: 30px;
  width: 100%;
}
.middle-button-container button {
  position: relative;
  width: 180px;
  height: 55px;
  padding: 10px 20px;
  color: #e8d9b6;
  font-family: 'Garamond', serif;
  font-size: 1.4rem;
  text-align: center;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);
  background-color: rgba(30, 30, 30, 0.7); 
  border: 1px solid #706040; 
  border-radius: 5px;
  box-shadow: 
    inset 0 0 8px rgba(0, 0, 0, 0.6), 
    1px 1px 0px rgba(255, 255, 255, 0.1);
  cursor: pointer;
  transition: all 0.3s ease;
}
.middle-button-container button:hover {
  background-color: rgba(50, 50, 50, 0.8);
  color: #fff;
  border-color: #a09070;
  box-shadow: 
    inset 0 0 10px rgba(0, 0, 0, 0.5),
    0 0 15px rgba(232, 217, 182, 0.3); 
}

.middle-deck-first {
  position: relative;
  border-color: #10b981 !important;
  box-shadow: 0 0 20px rgba(16, 185, 129, 0.5) !important;
}
.middle-deck-first::before {
  content: '未設定の項目があります';
  position: absolute;
  top: -70%; /* 初期位置を固定 */
  left: 0;
  width: 100%;
  padding: 3px 0;
  text-align: center;
  font-size: .7rem;
  color: #1e1e1e;
  border-radius: 5px;
  background-color: #c3ffeb;
  /* transformを使って滑らかにアニメーション */
  animation: smoothTooltipMove 2s ease-in-out infinite;
}
.middle-deck-first::after {
  content: '';
  position: absolute;
  top: calc(0px - ((55px * 0.7 - 0.7rem - 6px) / 2));
  left: 50%;
  transform: translateX(-50%);
  border-width: 5px;
  border-style: solid;
  border-color: #c3ffeb transparent transparent transparent;
  /* transformを使って滑らかにアニメーション */
  animation: smoothArrowMove 2s ease-in-out infinite;
}
@keyframes smoothTooltipMove {
  0% {
    transform: translateY(0); /* 70%の位置 */
  }
  50% {
    transform: translateY(-20%); /* 90%相当の位置 */
  }
  100% {
    transform: translateY(0); /* 70%の位置に戻る */
  }
}
@keyframes smoothArrowMove {
  0% {
    transform: translateX(-50%) translateY(0); /* 70%の位置 */
  }
  50% {
    transform: translateX(-50%) translateY(-20%); /* 90%相当の位置 */
  }
  100% {
    transform: translateX(-50%) translateY(0); /* 70%の位置に戻る */
  }
}